pipelines:
  - name: tutorial_gradle_build
    configuration:
      environmentVariables:
        readOnly:
          ArtIP: $(echo ${int_artifactory_url}|awk -F '/' '{print $3}')
          Version: 1.1.$run_number

    steps:
      - name: gradle_build_app
        type: GradleBuild
        configuration:
          runtime:
            type: image
            image:
              custom:
                # THe Docker image is used to support a java 8 image for the gradle build
                name: docker.bintray.io/jfrog/pipelines-u18java
                tag: "8"
          gradleCommand: clean artifactoryPublish -b build.gradle --stacktrace
          sourceLocation: k8s-app/step1-create-gradle-app
          configFileLocation: .
          configFileName: jfrog-gradle.yml
          autoPublishBuildInfo: true
          inputResources:
            - name: tutorial_gitRepo_code
          integrations:
            - name: artifactory
          outputResources:
            - name: tutorial_gradleBuildInfo

      #------------------------------------Docker Section ------------------------------------------------

      - name: gradle_docker_build
        type: DockerBuild
        configuration:
          dockerFileLocation: tutorial/step1-create-gradle-app
          dockerFileName: Dockerfile
          dockerImageName: ${ArtIP}/docker-demo-dev-local/gradle-app
          dockerImageTag: ${Version}
          inputSteps:
            - name: gradle_build_app
          inputResources:
            - name: tutorial_gitRepo_code
              trigger: false
            - name: tutorial_gradle_fileSpec
              trigger: false
            - name: tutorial_gradleBuildInfo
              trigger: false
          integrations:
            - name: artifactory
#        execution:
#          onStart:
#            # export artifactory ip from internal build env var to tag the docker image
#            - export ArtIP=$(echo ${int_artifactory_url}|awk -F '/' '{print $3}')

      - name: gradle_docker_push
        type: DockerPush
        configuration:
          targetRepository: docker-demo-dev-local
          autoPublishBuildInfo: true
          integrations:
            - name: artifactory
          inputSteps:
            - name: gradle_docker_build
          outputResources:
            - name: tutorial_docker_gradleBuild_Info

      - name: gradle_docker_scan
        type: XrayScan
        configuration:
          inputResources:
            - name: tutorial_docker_gradleBuild_Info
#              trigger: true
          outputResources:
            - name: tutorial_scanned_gradle_dockerBuild_Info

      - name: gradle_docker_promote
        type: PromoteBuild
        configuration:
          targetRepository: docker-demo-prod-local
          status: Passed
          comment: Artifact passed Xray Scan
          copy: false
          inputResources:
            - name: tutorial_scanned_gradle_dockerBuild_Info
#              trigger: true
          outputResources:
            - name: tutorial_final_docker_gradleBuild_Info
