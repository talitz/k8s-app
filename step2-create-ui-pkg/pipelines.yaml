pipelines:
  - name: tutorial_npm_build
    configuration:
      environmentVariables:
        readOnly:
          ArtIP: $(echo ${int_artifactory_url}|awk -F '/' '{print $3}')
          Version: 1.2.$run_number
    steps:
      - name: npm_build
        type: NpmBuild
        configuration:
          npmArgs: --no-progress --no-audit
          repositoryName: npm-demo
          sourceLocation: k8s-app/step2-create-ui-pkg
          integrations:
            - name: artifactory
          inputResources:
            - name: tutorial_gitRepo_code
        execution:
          onStart:
            - pushd ${res_tutorial_gitRepo_code_resourcePath}/k8s-app/step2-create-ui-pkg
            - npm version ${Version} --no-git-tag-version
            - popd

      - name: npm_compile
        type: Bash
        configuration:
          inputSteps:
            - name: npm_build
          integrations:
            - name: artifactory
        execution:
          onStart:
            - export tempStateLocation="$step_tmp_dir/npmSourceState"
            # Restore file from previous step to current step
            - restore_run_files npmBuildInputGitRepo $tempStateLocation
            - pushd $tempStateLocation/k8s-app/step2-create-ui-pkg
            - npm install shelljs
            - npm install
            # Add files to npm pipeline target
            - add_run_files $tempStateLocation/. npmBuildInputGitRepo
            - popd

      - name: npm_publish
        type: NpmPublish
        configuration:
          repositoryName: npm-demo
          integrations:
            - name: artifactory
          inputSteps:
            - name: npm_compile
        execution:
          onStart:
            - export inputNpmBuildStepName="npm_build"

      #------------------------------------Docker Section ------------------------------------------------

      - name: npm_docker_build
        type: DockerBuild
        configuration:
          dockerFileLocation: k8s-app/step2-create-ui-pkg
          dockerFileName: Dockerfile
          dockerImageName: ${ArtIP}/docker-demo-dev-local/npm-app
          dockerImageTag: ${Version}
          inputSteps:
            - name: npm_publish
          inputResources:
            - name: tutorial_gitRepo_code
            - name: tutorial_npm_fileSpec
          integrations:
            - name: artifactory
        execution:
          onStart:
            - pushd ${res_tutorial_gitRepo_code_resourcePath}/k8s-app/step2-create-ui-pkg
            # Creating a Folder for the fileSpec Target
            - mkdir -p npm_results
            - popd
          onSuccess:
            - echo "Congrats The Docker image was build"

      - name: npm_docker_push
        type: DockerPush
        configuration:
          targetRepository: docker-demo-dev-local
          autoPublishBuildInfo: true
          integrations:
            - name: artifactory
          inputSteps:
            - name: npm_docker_build
          outputResources:
            - name: tutorial_docker_npmBuild_Info

      - name: npm_docker_scan
        type: XrayScan
        configuration:
          inputResources:
            - name: tutorial_docker_npmBuild_Info
              trigger: true
          outputResources:
            - name: tutorial_scanned_npm_dockerBuild_Info

      - name: npm_docker_promote
        type: PromoteBuild
        configuration:
          targetRepository: docker-demo-prod-local
          includeDependencies: true
          status: Passed
          comment: Artifact passed Xray Scan
          copy: false
          inputResources:
            - name: tutorial_scanned_npm_dockerBuild_Info
              trigger: true
          outputResources:
            - name: tutorial_final_docker_npmBuild_Info
